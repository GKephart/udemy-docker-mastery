#show networks
#  * --network-bridge TLDR Default Docker virtual network which is NAT'ed behing the host ip
#
# default container for lesson
docker container run -p 80:80 --name webhost -d nginx

#port specfied container is runnig off of.
docker container port webhost

#ls for docker networks duh
docker network ls

docker container inspect --format '{{ .NetworkSettings.IPv4Address}}' webhost

# inspect a network
docker network inspect

# create a network
docker network create --driver

# attach a network to a container
#  * --driver TLDR I have no idea
docker network connect --driver

#detach a network from container
docker network disconnect

# used to find what containers are attached the bridge network
docker network inspect bridge
# output (compressed json)
#[{"Name":"bridge","Id":"0f94a994c49025af3282b11a9e22be299c0485633a76f37abe02a3d8371fcb50","Created":"2018-09-25T22:59:22.126514816Z","Scope":"local","Driver":"bridge","EnableIPv6":false,"IPAM":{"Driver":"default","Options":null,"Config":[{"Subnet":"172.17.0.0/16","Gateway":"172.17.0.1"}]},"Internal":false,"Attachable":false,"Ingress":false,"ConfigFrom":{"Network":""},"ConfigOnly":false,"Containers":{"1c419fca2faf51daaa054da363babea94c04e5876fd0fd2216abdf062b10e00f":{"Name":"db","EndpointID":"4b51292a2d9bdc62fc00660bd41ed14f59b1bbb04e8a45959b959fd7fcfbb72a","MacAddress":"02:42:ac:11:00:02","IPv4Address":"172.17.0.2/16","IPv6Address":""},"66e840c8f09574092ad800649d04e3991ebbaf4928e6ef3f7165f114c600c95c":{"Name":"webhost","EndpointID":"d430cfa447b3644fe0ab75c6f146f838135382688386f992a15a23ddd1176671","MacAddress":"02:42:ac:11:00:03","IPv4Address":"172.17.0.3/16","IPv6Address":""}},"Options":{"com.docker.network.bridge.default_bridge":"true","com.docker.network.bridge.enable_icc":"true",
#"com.docker.network.bridge.enable_ip_masquerade":"true","com.docker.network.bridge.host_binding_ipv4":"0.0.0.0","com.docker.network.bridge.name":"docker0","com.docker.network.driver.mtu":"1500"},"Labels":{}}]

# create a new docker network
docker network create my_app_net
# created a network with a bridge driver (default driver) with a subnet of 172.17.0.1^

# run a docker container with a specfied network
docker container run -d --name new_nginx --network my_app_net nginx

 docker network inspect my_app_net
#output  [{"Name":"my_app_net","Id":"7a7f33fafa6ef4df1c8947d5ed8d935a3b0f650f5e225deabe49c70cb75b8ac0","Created":"2018-09-27T18:43:49.6922803Z","Scope":"local","Driver":"bridge","EnableIPv6":false,"IPAM":{"Driver":"default","Options":{},"Config":[{"Subnet":"172.18.0.0/16","Gateway":"172.18.0.1"}]},"Internal":false,"Attachable":false,"Ingress":false,"ConfigFrom":{"Network":""},"ConfigOnly":false,"Containers":{"7dd9d19ebebfb1a9a81fc2b0c4c00577bf666804a5eee8a76a24af6bdd59921e":{"Name":"new_nginx","EndpointID":"eca959cb64b0436377d24425887c2dc5f450b932fe6a25e05bfc750e36650c2f","MacAddress":"02:42:ac:12:00:02","IPv4Address":"172.18.0.2/16","IPv6Address":""}},"Options":{},"Labels":{}}]

# Advantages of Docker vs VM
#   * Create apps so that frontend/backend sit on the same network.
#   * Internal communication never leaves the host.
#   * externally exposed ports are closed by default
